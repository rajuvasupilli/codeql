name: Customized CodeQL Analysis

on:
  workflow_dispatch: # Manual trigger
  push:
    branches:
      - THEP-56
      - main

permissions:
  contents: read
  security-events: write

jobs:
  codeql:
    name: Run CodeQL Analysis
    permissions: write-all
    #runs-on: aks-arc
    runs-on: [ubuntu-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Print directory contents
        run: |
          echo "Current Directory:"
          pwd
          echo "Directory Contents:"
          ls -la
          echo "Contents of 'codeql-queries':"
          ls -l codeql-queries || echo "'codeql-queries' not found"
          find . -name "*.java" -o -name "*.js"

      - name: Install Node.js
        run: |
          curl -sL https://deb.nodesource.com/setup_20.x | sudo -E bash -
          sudo apt-get install -y nodejs
          node -v

      - name: Build project
        run: |
          mvn -f services/demo/pom.xml clean compile
          echo "Verifying compiled classes:"
          find services/demo -name "*.class" || echo "❌ No .class files found"
        shell: bash

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: java, javascript
          #queries: ./codeql-queries/javascript/test.ql
          queries: ./codeql-queries/javascript/InsecureEval.ql
          build-mode: manual

      - name: Manual build for CodeQL
        run: mvn -f services/demo/pom.xml clean compile

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: custom

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Locate and Parse SARIF results
        run: |
          echo "Searching for SARIF files..."
          sarif_files=$(find /home/runner/_work/ep-sred/results -iname '*.sarif')
          if [[ -z "$sarif_files" ]]; then
            echo "❌ No SARIF files found. CodeQL analysis may have failed."
            exit 1
          fi
          echo "SARIF_FILES: $sarif_files"

          for file in $sarif_files; do
            echo "Processing SARIF file: $file"
            cat "$file" | jq . > /dev/null 2>&1
            if [[ $? -ne 0 ]]; then
              echo "❌ ERROR: The file $file is not a valid JSON or is empty."
              cat "$file"
              exit 1
            fi
            jq -r '.runs[].results[] | "\(.level | ascii_upcase): \(.message.text) [File: \(.locations[0].physicalLocation.artifactLocation.uri)]"' "$file" || echo "✅ No issues found!" 
          done
        shell: bash
